from discountCalculator.calculation import DiscountCalculator
from discountCalculator.loadExcel import load_excel
from configparser import ConfigParser
from pathlib import Path
import pandas as pd
import os
import numpy as np
def main(input_file=None, output_file=None):
    print("üîç Starting discount calculation...")
    config = ConfigParser()
    config_path = os.path.join(os.path.dirname(__file__), 'config.ini')
    config.read(config_path, encoding='utf-8')
    input_path = Path(input_file)
    if input_path.is_dir():
        excel_files = list(input_path.glob("*.xlsx"))
        if not excel_files:
            print("‚ùå No Excel files found in the folder.")
            return
        input_path = excel_files[0]

    print(f"üìÇ Using Excel file: {input_path}")
    df = load_excel(input_path)

    if df is not None:
        col_discount = config['Settings']['COLUMN_DISCOUNT']
        col_debt = config['Settings']['COLUMN_DEBT_SUM']
        col_overdue = config['Settings']['COLUMN_OVERDUE_BODY']

        df[col_discount] = df.apply(
            lambda row: DiscountCalculator(row[col_debt], row[col_overdue]).calculate_discount(),
            axis=1
        )

        df.to_excel(input_path, index=False)  # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ —Ç–æ–π —Å–∞–º–∏–π —Ñ–∞–π–ª
        print(f"üíæ File overwritten: {input_path}")

def compare_excel_files(file1, file2, key_columns=None):
    # –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è Excel-—Ñ–∞–π–ª—ñ–≤
    df1 = pd.read_excel(file1)
    df2 = pd.read_excel(file2)

    # –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ –∫–ª—é—á–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏ ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    if key_columns:
        df1 = df1.set_index(key_columns)
        df2 = df2.set_index(key_columns)

    # –í–∏—Ä—ñ–≤–Ω—é—î–º–æ —Ç–∏–ø–∏ —Ç–∞ —Å–æ—Ä—Ç—É—î–º–æ
    df1 = df1.sort_index().astype(str)
    df2 = df2.sort_index().astype(str)

    # –†—è–¥–∫–∏, —è–∫—ñ —î –≤ df2, –∞–ª–µ –Ω–µ –≤ df1
    added = df2[~df2.index.isin(df1.index)]

    # –†—è–¥–∫–∏, —è–∫—ñ —î –≤ df1, –∞–ª–µ –Ω–µ –≤ df2
    removed = df1[~df1.index.isin(df2.index)]

    # –†—è–¥–∫–∏ –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º —ñ–Ω–¥–µ–∫—Å–æ–º, –∞–ª–µ –∑–º—ñ–Ω–µ–Ω–∏–º –≤–º—ñ—Å—Ç–æ–º
    common = df1[df1.index.isin(df2.index)]
    updated = df2[df2.index.isin(df1.index)]
    changed = common[common.ne(updated)].dropna(how='all')

    return {
        'added': added,
        'removed': removed,
        'changed': changed
    }

def compare():
    # compare two excel files
    result = compare_excel_files(
        "–¢–ï–°–¢_empty.xlsx",
        "–¢–ï–°–¢.xlsx",
        key_columns=["id"]  # –∞–±–æ None
    )

    # –ü–æ—Ä—ñ–≤–Ω—è–ª—å–Ω–∞ —Ç–∞–±–ª–∏—Ü—è: —Å—Ç–∞—Ä—ñ vs –Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    common_ids = result['changed'].index
    df_old = pd.read_excel('–¢–ï–°–¢_empty.xlsx').set_index('id')
    df_new = pd.read_excel('–¢–ï–°–¢.xlsx').set_index('id')

    comparison = pd.concat([df_old.loc[common_ids], df_new.loc[common_ids]],
                           axis=1,
                           keys=["OLD", "NEW"])

    # –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ª–∏—à–µ "–î–∏—Å–∫–æ–Ω—Ç (–¥–æ)"
    discount_comparison = comparison[[("OLD", "–î–∏—Å–∫–æ–Ω—Ç (–¥–æ)"), ("NEW", "–î–∏—Å–∫–æ–Ω—Ç (–¥–æ)")]].copy()
    discount_comparison.columns = ["OLD_–î–∏—Å–∫–æ–Ω—Ç", "NEW_–î–∏—Å–∫–æ–Ω—Ç"]
    discount_comparison["–°—É–º–∞ –±–æ—Ä–≥—É, –≥—Ä–Ω"] = df_new.loc[common_ids, "–°—É–º–∞ –±–æ—Ä–≥—É, –≥—Ä–Ω"].values
    discount_comparison["–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–µ —Ç—ñ–ª–æ, –≥—Ä–Ω"] = df_new.loc[common_ids, "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–µ —Ç—ñ–ª–æ, –≥—Ä–Ω"].values

    # –û–±—á–∏—Å–ª–∏—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é


    # –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–∏—à–µ —Ç—ñ, –¥–µ —Å–ø—Ä–∞–≤–¥—ñ —â–æ—Å—å –∑–º—ñ–Ω–∏–ª–æ—Å—è
    changed_only = discount_comparison[
        ~np.isclose(
            discount_comparison["NEW_–î–∏—Å–∫–æ–Ω—Ç"].astype(float),
            discount_comparison["OLD_–î–∏—Å–∫–æ–Ω—Ç"].astype(float),
            atol=1e-5
        )
    ]
    pd.set_option('display.max_rows', None)
    print("\nüìä –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–∏—Å–∫–æ–Ω—Ç—É (—Ç—ñ–ª—å–∫–∏ –∑–º—ñ–Ω–∏):")
    print(f"Total changes: {len(changed_only)}")
    print(changed_only)
if __name__     == "__main__":
     config = ConfigParser()
     config.read('config.ini', encoding='utf-8')
     file_name = config['Settings']['FILE_NAME_DISCOUNT']
     main(file_name, output_file="discounted_" + file_name)
     #print(DiscountCalculator("7146.30", "4200.00").calculate_discount())
     compare()


